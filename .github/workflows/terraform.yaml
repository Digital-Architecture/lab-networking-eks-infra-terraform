name: Terraform 

on: [pull_request]

jobs:

  terraform: 
    runs-on: ubuntu-latest
    env:
      stack: lab

    steps:

      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          AWS_REGION: ${{ secrets.AWS_REGION}}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      
      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate -no-color
      
      - name: Create Terraform Workspace
        id: create_workspace
        run: terraform workspace new ${{ env.stack }}
        continue-on-error: true
      
      - name: Terraform Workspace Select
        id: select_workspace
        run: terraform workspace select ${{ env.stack }}

       - name: Terraform Plan
        id: plan
        run: terraform plan -var-file="environments/$(cat .terraform/environment)/variables.tfvars" -no-color
        continue-on-error: true
      
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
      
      - name: Terraform Apply
        environment: 'lab'
        run: terraform apply -var-file="environments/$(cat .terraform/environment)/variables.tfvars" -auto-approve











      - name: Run Terraform Plan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secretS.AWS_SECRET_ACCESS_KEY }}
        run: terraform plan --var-file="environments/lab/variables.tfvars"

      - name: Run Terraform apply
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secretS.AWS_SECRET_ACCESS_KEY }}
        run: terraform apply --var-file="environments/lab/variables.tfvars" -auto-approve