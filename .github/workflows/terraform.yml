name: Terraform 

on:
  push:
    branches:
    - develop
  pull_request:
    branches:
    - main
  

jobs:

  validate: 
    runs-on: ubuntu-latest
    env:
      stack: lab
    steps:

      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1

      - name: AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          AWS_REGION: ${{ secrets.AWS_REGION}}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      
      - name: Terraform Init
        run: | 
          terraform init
          terraform workspace new ${{ env.stack }}
        continue-on-error: true

      - name: Terraform Validate
        run: terraform validate -no-color
      
  plan:
    needs: validate
    runs-on: ubuntu-latest
    env:
      stack: lab
    steps:

      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
      
      - name: AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          AWS_REGION: ${{ secrets.AWS_REGION}}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      
      - name: Terraform Init
        run: | 
          terraform init
          terraform workspace new ${{ env.stack }}
        continue-on-error: true
        
      - name: Terraform Plan
        id: plan
        run: terraform plan -var-file="environments/$(cat .terraform/environment)/variables.tfvars" -no-color
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

  apply:
    needs: plan
    runs-on: ubuntu-latest
    environment: 'Lab'
    env:
      stack: lab
    steps:

      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
      
      - name: AWS Credentials
        if: contains('refs/heads/main', github.ref)
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ secrets.AWS_REGION}}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      
      - name: Terraform Init
        if: contains('refs/heads/main', github.ref)
        run: | 
          terraform init
          terraform workspace new ${{ env.stack }}
        continue-on-error: true

      - name: Terraform Apply
        if: contains('refs/heads/main', github.ref)
        run: terraform apply -var-file="environments/$(cat .terraform/environment)/variables.tfvars" -auto-approve








